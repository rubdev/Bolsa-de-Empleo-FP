/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bolsaempleo;

import java.awt.Color;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import javax.swing.JOptionPane;

/**
 *
 * @author ruben
 */
public class FormularioEmpresas extends javax.swing.JDialog {

    /**
     * Creates new form FormularioEmpresas
     */
    public FormularioEmpresas(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelCabecera = new javax.swing.JPanel();
        panelContenido = new javax.swing.JPanel();
        titulo = new javax.swing.JLabel();
        labelNombre = new javax.swing.JLabel();
        labelEmail = new javax.swing.JLabel();
        labelTlf = new javax.swing.JLabel();
        labelEncargado = new javax.swing.JLabel();
        labelSector = new javax.swing.JLabel();
        labelPracticas = new javax.swing.JLabel();
        inputNombre = new javax.swing.JTextField();
        inputEmail = new javax.swing.JTextField();
        inputEncargado = new javax.swing.JTextField();
        comboSector = new javax.swing.JComboBox<>();
        inputTelefono = new javax.swing.JFormattedTextField();
        checkPracticas = new javax.swing.JCheckBox();
        btnCancelar = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        id = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        labelPracticas1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        textoDatosAdicionales = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        javax.swing.GroupLayout panelCabeceraLayout = new javax.swing.GroupLayout(panelCabecera);
        panelCabecera.setLayout(panelCabeceraLayout);
        panelCabeceraLayout.setHorizontalGroup(
            panelCabeceraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );
        panelCabeceraLayout.setVerticalGroup(
            panelCabeceraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 620, Short.MAX_VALUE)
        );

        getContentPane().add(panelCabecera, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 20, 620));

        titulo.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        titulo.setText("Añadir empresa");

        labelNombre.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        labelNombre.setText("Nombre:");

        labelEmail.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        labelEmail.setText("Email:");

        labelTlf.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        labelTlf.setText("Teléfono:");

        labelEncargado.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        labelEncargado.setText("Persona de contacto:");

        labelSector.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        labelSector.setText("Sector:");

        labelPracticas.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        labelPracticas.setText("Acepta prácticas:");

        inputNombre.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        inputNombre.setToolTipText("<html>Introduce aquí el <b>nombre</b> de la empresa");

        inputEmail.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        inputEmail.setToolTipText("<html>Introduce aquí el <b>email</b> de contacto");

        inputEncargado.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        inputEncargado.setToolTipText("<html>Introduce aquí el nombre de la <b>persona de contacto</b>");

        comboSector.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        comboSector.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tecnología", "Turismo", "Hostelería", "Educación", "Comercio", "Construcción", "Moda", "Farmacéutica", "Otros" }));
        comboSector.setToolTipText("<html>Selecciona el </b>sector</b> al que pertenece la empresa");

        try {
            inputTelefono.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("#########")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        inputTelefono.setToolTipText("<html>Introduce aquí el <b>teléfono</b> de contacto");

        checkPracticas.setToolTipText("<html>Seleccionalo si la empresa <b>acepta alumnos en prácticas</b></html>");

        btnCancelar.setBackground(new java.awt.Color(232, 232, 232));
        btnCancelar.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.setToolTipText("<html>Pulsa para </b>cancelar</b> y salir del formulario");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnGuardar.setBackground(new java.awt.Color(232, 232, 232));
        btnGuardar.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        btnGuardar.setText("Guardar");
        btnGuardar.setToolTipText("<html>Pulsa para <b>guardar</b> o <b>modificar</b> los datos introducidos");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        id.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        id.setEnabled(false);

        labelPracticas1.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        labelPracticas1.setText("Datos adicionales:");

        textoDatosAdicionales.setColumns(20);
        textoDatosAdicionales.setRows(5);
        textoDatosAdicionales.setToolTipText("<html>Aquí puedes poner mas <b>información</b> que necesites guardar sobre <br>\nla empresa como <b>CIF, DNI, responsable legal, tutor docente</b><br>");
        jScrollPane1.setViewportView(textoDatosAdicionales);

        javax.swing.GroupLayout panelContenidoLayout = new javax.swing.GroupLayout(panelContenido);
        panelContenido.setLayout(panelContenidoLayout);
        panelContenidoLayout.setHorizontalGroup(
            panelContenidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelContenidoLayout.createSequentialGroup()
                .addGroup(panelContenidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelContenidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelContenidoLayout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(25, 25, 25)
                            .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(panelContenidoLayout.createSequentialGroup()
                            .addGap(36, 36, 36)
                            .addGroup(panelContenidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(labelPracticas1)
                                .addGroup(panelContenidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(labelEncargado)
                                    .addGroup(panelContenidoLayout.createSequentialGroup()
                                        .addComponent(labelNombre)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(inputNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(titulo, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelContenidoLayout.createSequentialGroup()
                                        .addGroup(panelContenidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelContenidoLayout.createSequentialGroup()
                                                .addComponent(labelSector)
                                                .addGap(83, 83, 83))
                                            .addGroup(panelContenidoLayout.createSequentialGroup()
                                                .addGroup(panelContenidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(labelEmail)
                                                    .addComponent(labelTlf)
                                                    .addComponent(labelPracticas))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                        .addGroup(panelContenidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(checkPracticas)
                                            .addGroup(panelContenidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(inputEmail, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                                                .addComponent(inputTelefono)
                                                .addComponent(inputEncargado, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                                                .addComponent(comboSector, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))))))
                .addGap(39, 39, 39))
        );
        panelContenidoLayout.setVerticalGroup(
            panelContenidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelContenidoLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(titulo, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addGroup(panelContenidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelNombre)
                    .addComponent(inputNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(panelContenidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelEmail)
                    .addComponent(inputEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(panelContenidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelTlf)
                    .addComponent(inputTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(panelContenidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelEncargado)
                    .addComponent(inputEncargado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(panelContenidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelSector)
                    .addComponent(comboSector, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(panelContenidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(labelPracticas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(checkPracticas, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(20, 20, 20)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(labelPracticas1)
                .addGap(20, 20, 20)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addGroup(panelContenidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20))
        );

        getContentPane().add(panelContenido, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 0, 350, 620));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        boolean modificar = false, correcto = true;
        String nombre, email, telefono="", encargado, sector, esNuevo, datosAdicionales;
        int practicas;
        int idEmpresa=0;
        esNuevo = titulo.getText();
        nombre = inputNombre.getText();
        email = inputEmail.getText();
        encargado = inputEncargado.getText();
        datosAdicionales = textoDatosAdicionales.getText();
        try {
            telefono = (String) inputTelefono.getValue();
        } catch(Exception e) {
            System.out.println("ERROR: "+e.getMessage());
        }
        try {
            idEmpresa = Integer.parseInt(id.getText());
        } catch (Exception e) {
            System.out.println("ERROR: "+e.getMessage());
        }
        sector = comboSector.getSelectedItem().toString();
        if (checkPracticas.isSelected()) {
            practicas = 1;
        } else {
            practicas = 0;
        }
        // comprobaciones
        if (nombre.equals("")) {
            JOptionPane.showMessageDialog(null, "No puedes dejar el campo nombre vacío","Error", JOptionPane.WARNING_MESSAGE);
            correcto = false;
        }
        if (email.equals("")) {
            JOptionPane.showMessageDialog(null, "No puedes dejar el campo email vacío","Error", JOptionPane.WARNING_MESSAGE);
            correcto = false;
        }
        if (telefono == null) {
            JOptionPane.showMessageDialog(null, "El campo teléfono no es correcto, verifica que son 9 números","Error", JOptionPane.WARNING_MESSAGE);
            correcto = false;
        }
        if (encargado.equals("")) {
            JOptionPane.showMessageDialog(null, "No puedes dejar el campo encargado vacío","Error", JOptionPane.WARNING_MESSAGE);
            correcto = false;
        }
        if (sector.equals("")) {
            JOptionPane.showMessageDialog(null, "No puedes dejar el campo sector vacío","Error", JOptionPane.WARNING_MESSAGE);
            correcto = false;
        }
        // compruebo si es añadir o modificar
        if (esNuevo.equals("Añadir empresa")) {
            modificar = false;
        } else {
            modificar = true;
        }
        if (!modificar && correcto) {
            System.out.println("MENSAJE: Voy a guardar empresa");
            try {
                PreparedStatement insertarSQL;
                insertarSQL = this.bd.dameConexion().prepareStatement("INSERT INTO empresa (nombre,email,telefono,persona_encargada,sector,acepta_practicas,datos_adicionales) VALUES (?,?,?,?,?,?,?)");
                insertarSQL.setString(1, nombre);
                insertarSQL.setString(2, email);
                insertarSQL.setString(3, telefono);
                insertarSQL.setString(4, encargado);
                insertarSQL.setString(5, sector);
                insertarSQL.setInt(6, practicas);
                insertarSQL.setString(7, datosAdicionales);
                insertarSQL.executeUpdate();
                this.setVisible(false);
                JOptionPane.showMessageDialog(null, "Empresa guardada correctamente","Exito al guardar", JOptionPane.INFORMATION_MESSAGE);
                aplicacion.muestraTablaEmpresas("", "", false);
            } catch(SQLException e) {
                JOptionPane.showMessageDialog(null, e.getMessage(),"Error SQL", JOptionPane.WARNING_MESSAGE);
            }
            aplicacion.desactivarBotones();
        } else if (correcto && modificar) {
            System.out.println("MENSAJE: Voy a modificar empresa");
            try {
                PreparedStatement insertarSQL;
                insertarSQL = this.bd.dameConexion().prepareStatement("UPDATE empresa SET nombre = ?, email = ?, telefono = ?, persona_encargada = ?, sector = ?, acepta_practicas = ?, datos_adicionales = ? WHERE empresa_id = ?");
                insertarSQL.setString(1, nombre);
                insertarSQL.setString(2, email);
                insertarSQL.setString(3, telefono);
                insertarSQL.setString(4, encargado);
                insertarSQL.setString(5, sector);
                insertarSQL.setInt(6, practicas);
                insertarSQL.setString(7, datosAdicionales);
                insertarSQL.setInt(8, idEmpresa);
                insertarSQL.executeUpdate();
                this.setVisible(false);
                JOptionPane.showMessageDialog(null, "Empresa modificada correctamente","Exito al guardar", JOptionPane.INFORMATION_MESSAGE);
                aplicacion.muestraTablaEmpresas("", "", false);
            } catch(SQLException e) {
                JOptionPane.showMessageDialog(null, e.getMessage(),"Error SQL", JOptionPane.WARNING_MESSAGE);
            }
            aplicacion.desactivarBotones();
        } else{}
    }//GEN-LAST:event_btnGuardarActionPerformed

    /**
     * Configura el formulario para añadir una nueva empresa
     */
    public void preparaFormNuevo() {
        this.setResizable(false);
        panelCabecera.setBackground(colorPanelCabecera);
        panelContenido.setBackground(colorPanelContenido);
        titulo.setText("Añadir empresa");
        this.setTitle("Añadir empresa");
        inputNombre.setText("");
        inputEmail.setText("");
        inputEncargado.setText("");
        inputTelefono.setText("");
        id.setText("");
        checkPracticas.setSelected(false);
        comboSector.setSelectedIndex(0);
        id.setVisible(false);
        textoDatosAdicionales.setText("");
    }
    
    /**
     * Configura el formulario para modificar una empresa seleccionada
     */
    public void preparaFormMod(int codigo, String nombre, String email, String telefono, String encargado, String sector, int practicas, String datosAdicionales) {
        this.setResizable(false);
        panelCabecera.setBackground(colorPanelCabecera);
        panelContenido.setBackground(colorPanelContenido);
        titulo.setText("Modificar empresa");
        this.setTitle("Modificar empresa");
        id.setText(Integer.toString(codigo));
        inputNombre.setText(nombre);
        inputEmail.setText(email);
        inputEncargado.setText(encargado);
        inputTelefono.setText(telefono);
        for (int i = 0; i < comboSector.getItemCount(); i++) {
            if (comboSector.getItemAt(i).equals(sector)) {
                comboSector.setSelectedIndex(i);
            }
        }
        if (practicas == 1) {
            checkPracticas.setSelected(true);
        } else {
            checkPracticas.setSelected(false);
        }
        textoDatosAdicionales.setText(datosAdicionales);
        id.setVisible(false);
    }
    
    /**
     * Coge la conexión abierta a la BD por la aplicación
     * @param con 
     */
    public void darConexionAbierta(BD con) {
        System.out.println("AVISO: Paso la conexión BD a nuevo ciclo");
        this.bd = con;
    }
    
    /**
     * Me permite pasar la ventana de la aplicación abierta
     * @param aplicacion
     */
    public void darVentanaApp(App aplicacion) {
        System.out.println("Paso la ventana de aplicación abierta");
        this.aplicacion = aplicacion;
    }
    
    // Clase APP
    private App aplicacion;
    
    // Clase BD
    private BD bd;
    
    // Colores del formulario
    Color colorPanelCabecera = new Color(85, 136, 163);
    Color colorPanelContenido = new Color(232, 232, 232);

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JCheckBox checkPracticas;
    private javax.swing.JComboBox<String> comboSector;
    private javax.swing.JTextField id;
    private javax.swing.JTextField inputEmail;
    private javax.swing.JTextField inputEncargado;
    private javax.swing.JTextField inputNombre;
    private javax.swing.JFormattedTextField inputTelefono;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel labelEmail;
    private javax.swing.JLabel labelEncargado;
    private javax.swing.JLabel labelNombre;
    private javax.swing.JLabel labelPracticas;
    private javax.swing.JLabel labelPracticas1;
    private javax.swing.JLabel labelSector;
    private javax.swing.JLabel labelTlf;
    private javax.swing.JPanel panelCabecera;
    private javax.swing.JPanel panelContenido;
    private javax.swing.JTextArea textoDatosAdicionales;
    private javax.swing.JLabel titulo;
    // End of variables declaration//GEN-END:variables
}
